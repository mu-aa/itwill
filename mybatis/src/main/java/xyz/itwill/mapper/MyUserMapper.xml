<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.itwill.mapper.MyUserMapper">
	<insert id="insertUser" parameterType="MyUser">
		insert into myuser values(#{userId}, #{userName})
	</insert>
	
	<!-- resultType 속성을 사용하면 resultType 속성값으로 설정된 클래스로 객체를 생성하여
	검색행의 컬럼값을 같은 이름의 객체 필드값으로 자동 저장하여 제공 - 자동 mapping -->
	<!-- 문제점 : 검색행의 컬럼명과 resultType 속성값으로 설정된 클래스의 필드명이 모두 다른 경우
	reulstType 속성값으로 설정된 클래스의 객체 대신 null 제공 -->
	<!--
	<select id="selectUserList" resultType="MyUser">
		select * from myuser order by user_id
	</select>
	-->
	
	
	<!-- 해결방법-1 : 검색행의 컬럼명을 reulstType 속성값으로 설정된 클래스의 필드명과 같도록 검색 -->
	<!-- ㄴ SELECT 명령에서 Column Alias 기능을 이용하여 검색대상의 별칭을 필드명과 같도록 검색 -->
	<!-- sql : SQL 명령을 구성하는 일부분의 문장을 등록하기 위한 Element -->
	<!-- 
	<sql id="myUserColumnAlias">
		user_id userId, user_name userName
	</sql>
	-->
	
	<!-- include : sql Element로 등록된 문장을 제공받아 SQL 명령에 포함하는 Element -->
	<!-- refid 속성 : sql Element의 식별자를 속성값으로 설정 -->
	<!-- 
	<select id="selectUserList" resultType="MyUser">
		select <include refid="myUserColumnAlias" /> from myuser order by user_id
	</select>
	-->
	
	
	<!-- 해결방법-2 : mybatis-config.xml의 setting Element를 사용하여 SQL의 스네이크 표기법으로
	표현된 식별자를 카멜 표기법으로 자동 변환되도록 설정 -->
	<!-- 
	<select id="selectUserList" resultType="MyUser">
		select * from myuser order by user_id
	</select>
	-->
	
	<!-- 해결방법-3 : reulstMap Element를 사용하여 검색행의 컬럼값이 클래스의 필드에 저장되도록 설정 - 수동 mapping -->
	<!-- resultMap : 검색행을 Java 객체로 생성하여 제공하기 위한 Element -->
	<!-- ㄴ 검색행의 컬럼값을 필드에 저장하기 위해 하위 Element 사용 -->
	<!-- ㄴ 하위 Element : constructor, id, result, association, collection, discriminator -->
	<!-- type 속성 : resultMap Element로 제공될 Java 객체의 자료형(클래스)을 속성값으로 설정 -->
	<!-- ㄴ Java 자료형 대신 typeAlias Element의 별칭 사용 가능 -->
	<!-- id 속성 : resultMap Element의 식별자를 속성값으로 설정 -->
	<resultMap type="MyUser" id="myUserResultMap">
		<!-- id : 검색행의 컬럼값을 필드에 저장하기 위한 Element - Setter 메소드 호출 -->
		<!-- ㄴ PK 제약조건이 설정된 컬럼값을 제공받아 필드에 저장하기 위해 사용 -->
		<!-- column 속성 : 검색행의 컬럼명을 속성값으로 설정 -->
		<!-- property 속성 : 클래스(MyUser)의 필드명을 속성값으로 설정 -->
		<id column="user_id" property="userId"/>
		<!-- result : 검색행의 컬럼값을 필드에 저장하기 위한 Element - Setter 메소드 호출 -->
		<result column="user_name" property="userName"/>
	</resultMap>
	
	<!-- resultMap 속성 : resultMap Element의 식별자를 속성값으로 설정 - 수동 mapping -->
	<select id="selectUserList" resultMap="myUserResultMap">
		select * from myuser order by user_id
	</select>
</mapper>