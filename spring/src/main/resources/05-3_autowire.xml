<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- StudentDAO 인터페이스를 상속받은 자식 클래스를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill05.di.StudentJdbcDAO" id="studentJdbcDAO" />
	<!-- byName - <bean class="xyz.itwill05.di.StudentJdbcDAO" id="studentDAO" /> -->
	<!-- <bean class="xyz.itwill05.di.StudentMybatisDAO" id="studentMybatisDAO" /> -->
	
	
	<!-- StudentService 인터페이스를 상속받은 자식 클래스를 Spring Bean으로 등록 -->
	<!-- ㄴ StudentServiceImpl 클래스의 studentDAO 필드에 StudentDAO 인터페이스를 상속받은
	자식 클래스의 객체(Spring Bean)가 저장되도록 의존성 주입 - 의존관계 성립 -->
	<!-- ㄴ 의존성 주입을 하지 않은 경우 StudentServiceImpl 클래스의 메소드에서 StudentDAO
	인터페이스를 상속받은 자식클래스의 메소드를 호출할 경우 NullPointerException 발생 -->
	<!-- property Element를 사용하여 studentDAO 필드에 StudentDAO 인터페이스를 상속받은
	자식 클래스의 객체(Spring Bean)가 저장되도록 설정 - Setter Injection -->
	<!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService">
		<property name="studentDAO" ref="studentJdbcDAO" />
	</bean> -->
	
	
	<!-- ●autowire 속성 : no(default), byName, byType, constructor 중 하나를 속성값으로 설정 -->
	<!-- ㄴ Spring Container가 Spring Bean의 의존관계를 자동으로 구현하도록 설정하는 속성 -->
	
	<!-- ○no 속성값 : 자동 의존관계 구현 기능 미사용 -->

	<!-- ○byName 속성값 : Spring Bean으로 등록된 클래스의 필드명과 같은 식별자(beanName)로 선언된
	Spring Bean을 제공받아 필드에 저장되도록 의존성 주입 - Setter Injection -->
	<!-- ㄴ 필드명과 같은 식별자(beanName)로 선언된 Spring Bean이 없는 경우 의존성 미주입 - NullPointerException 발생 -->
	<!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="byName" /> -->
	
	<!-- ○byType 속성값 : Spring Bean으로 등록된 클래스의 필드명과 같은 자료형의 Spring Bean을 제공받아
	필드에 저장되도록 의존성 주입 - Setter Injection -->
	<!-- ㄴ 필드의 자료형이 인터페이스인 경우 인터페이스를 상속받은 자식클래스로 등록된 Spring Bean의
	객체를 제공받아 필드에 저장되도록 의존성 주입 -->
	<!-- ㄴ 필드와 같은 자료형의 Spring Bean이 2개 이상 등록된 경우 의존성 주입 실패 - NoUniqueBeanDefinitionException 발생 -->
	<!-- <bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="byType" /> -->
	
	<!-- ○constructor 속성값 : Spring Bean으로 등록된 클래스의 필드와 같은 자료형의 Spring Bean을 제공받아
	필드에 저장되도록 의존성 주입 - Constructor Injection -->
	<!-- ㄴ 필드와 같은 자료형의 Spring Bean이 2개 이상 등록된 경우 기본 생성자로 객체 생성 - 의존성 미주입 -->
	<bean class="xyz.itwill05.di.StudentServiceImpl" id="studentService" autowire="constructor" />
	
	
</beans>
