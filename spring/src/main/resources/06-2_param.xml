<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 핵심관심모듈로 선언된 클래스를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill07.aop.JoinPointBean" id="joinPointBean" />
	
	<!-- 횡단관심모듈로 선언된 클래스를 Spring Bean으로 등록 -->
	<bean class="xyz.itwill07.aop.JoinPointAdvice" id="joinPointAdvice" />
	
	<aop:config>
		<aop:aspect ref="joinPointAdvice">
			<aop:before method="beforeDisplay" pointcut="execution(* *(..))"/>
			<!-- 클래스 표현 시 패키지까지 작성, 매개변수에는 패키지 미작성 -->
			<aop:after method="displayMessage" pointcut="execution(void remove(int))"/>
			<!-- returning 속성 : 타겟 메소드의 반환값을 전달받아 저장할 매개변수의 이름을 속성값으로 설정 -->
			<aop:after-returning method="displayName" pointcut="execution(java.lang.String getName())"
				returning="object"/>
			<aop:after-throwing method="exceptionHandle" 
				pointcut="execution(void calc(int, int))" throwing="exception"/>
			<aop:around method="display" pointcut="execution(* modify(..))"/>
		</aop:aspect>
	</aop:config>
</beans>