package xyz.itwill.controller;

import java.time.LocalDate;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import lombok.RequiredArgsConstructor;
import xyz.itwill.dto.Expenses;
import xyz.itwill.exception.UserinfoNotFoundException;
import xyz.itwill.service.ExpensesService;
import xyz.itwill.service.IncomeService;

/**
 * Handles requests for the application home page.
 */
@Controller
@RequiredArgsConstructor
public class HomeController {
	private final ExpensesService expensesService;
	private final IncomeService incomeService;
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);

	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String main(Model model) {
		model.addAttribute("expensesSumAll", expensesService.getSumAllExpenses());
		model.addAttribute("incomeSumAll", incomeService.getSumAllIncome());
		model.addAttribute("expensesList", expensesService.getExpensesList());

		return "main";
	}

	@ResponseBody
	@RequestMapping(value = "/", method = RequestMethod.POST)
	public String main(Model model, @ModelAttribute Expenses expenses) {
		if(expenses.getExNo()==null) {
			expensesService.addExpenses(expenses);
		} else {
			expensesService.modifyExpenses(expenses);
		}
		
		return "success";
	}
	
	@RequestMapping(value = "/remove", method = RequestMethod.POST)
	@ResponseBody
	public String remove(HttpServletRequest request) {
		String[] exNoList = request.getParameterValues("exNoList");

		for (String exNo : exNoList) {
			expensesService.removeExpenses(Integer.parseInt(exNo));
		}

		return "main";
	}

	@ExceptionHandler(UserinfoNotFoundException.class)
	@ResponseBody
	public String exceptionHanlder() {
		return "success";
	}
}