package xyz.itwill.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttributes;

import lombok.RequiredArgsConstructor;
import xyz.itwill.dto.Account;
import xyz.itwill.service.AccountService;

@Controller
@RequiredArgsConstructor
@SessionAttributes("accountList")
public class AccountController {
	private static final Logger logger = LoggerFactory.getLogger(AccountController.class);
	private final AccountService accountService;

	@RequestMapping(value = "popup/myAccount", method = RequestMethod.GET)
	public String account(Model model) {
		model.addAttribute("accountList", accountService.getAccountList());
		return "popup/myAccount";
	}

	@RequestMapping(value = "popup/addAccount", method = RequestMethod.POST)
	public String addAccount(Model model, @ModelAttribute Account account) {
		if(account.getAcName()==null) {
			account.setAcName("");
		}
		if(account.getAcBank()==null) {
			account.setAcBank("");
			accountService.addAccount(account);	
		} else {
			accountService.modifyAccount(account);
		}
		if(account.getAcCard()==null) {
			account.setAcCard("");
		}
		if(account.getAcBalance()==0) {
			account.setAcBalance(0);
		}
		if(account.getAcMemo()==null) {
			account.setAcMemo("");
		}

		return "redirect:popup/myAccount";
	}

	@RequestMapping(value = "popup/saveAccounts", method = RequestMethod.POST)
	public String saveAccounts(Model model, @ModelAttribute("accountList") List<Account> accountList) {
		model.addAttribute("accountList", accountList);
		return "redirect:popup/myAccount";
	}
	
	@RequestMapping(value="popup/removeAccount", method=RequestMethod.POST)
	@ResponseBody
	public String removeAccount(HttpServletRequest request) {
	    String[] acNameList = request.getParameterValues("acNameList");

	    for(String acName : acNameList) {
	        accountService.removeAccount(acName);
	    }

	    return "success";
	}
	
	@RequestMapping(value = "popup/myAccountList", method = RequestMethod.GET)
	public String myAccount(Model model) {
	    List<Account> accountList = accountService.getAccountList();
	    model.addAttribute("accountList", accountList);

	    return "popup/myAccount";
	}

}

