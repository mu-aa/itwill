<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<style type="text/css">

html, body, .tableZone {width: 100%}

.row {font-size: 11px; font-weight: 700; font-color: gray;}

#expenses-table {width:100%; border:2px solid #f0f1f1; margin-top: 100px; border-collapse: collapse; font-size: 14px; font-weight: 700;}
#expenses-table td, #expenses-table th {border:1px solid #c3c4c7; border-collapse: collapse; height:30px;}
#expenses-table th {background-color: #f0f0f1;}
#expenses-table input {border-style: none; text-align: center; width: 93%; font-size: 14px;}
#expenses-table input:focus {outline: 1px solid #03C75A; outline-offset: 8px;}
.date {width: 5%;}
.card {width: 15%;}
.cash {width: 15%;}
.memo {width: 30%}
.date input, .checkbox input {text-align: center;}
.card input, .cash input {text-align: right;}

.main-category {text-align:left; margin: 0 0 5px 45px;}
.main-category button {background-color: white; border-width: 0; font-size: 15px;}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}
 </style>
<meta charset="UTF-8" />
<title>test</title>

<script type="text/javascript">
function submit() {
	if (form_ex.exCard.value == 0 && form_ex.exCash.value == 0) {
		alert("금액을 입력하세요.");
		form_ex.cash.focus();
		return;
	} 
	form_ex.submit();
	return;
}
</script>

 </head>
 <body>
 	<div class="row">
 		<div class="col-lg-12">
 			<div class="main-box">
 					<div class="main-category">
 						<button type="button" onclick="location.href='${pageContext.request.contextPath}/';" style="border-bottom: 2px solid #03C75A; font-weight: 700;">지출</button>
 						<button type="button" onclick="location.href='${pageContext.request.contextPath}/income';">수입</button>
 						<button type="button" onclick="location.href='${pageContext.request.contextPath}/calender';">달력</button>
 					</div>
 				
 				<div class="main-box-body">
 					<div id="graph-bar" style="height: 300px; padding: 0px; position: relative;"></div>
 				</div>
 			</div>
 		</div>
 	</div>
 	
 	
 	
	<div class="tableZone">
		<form method="post" name="form_ex">
			<table id="expenses-table">
				<thead>
					<tr>
						<th class="checkbox">
							<input type="checkbox" value="selectall" onclick="selectAll(this)"/>
						</th>
						<th class="date">날짜</th>
		        		<th class="cash">현금</th>
						<th class="card">카드</th>
						<th class="acname">출금계좌명</th>
						<th class="category">분류</th>
						<th class="memo">메모</th>
					</tr>
				</thead>
				<tbody>
					<c:if test="${empty expensesList or expensesList == null}">
						<tr>
							<td class="checkbox"><input type="checkbox" name="checkbox"></td>
							<td class="date"><input type="date" name="exDate" value="${fn:replace(ex.exDate,'/','-')}"></td>
			        		<td class="cash">
			        			<input type="number" min="0" max="999999999" name="exCash" value="${ex.exCash }">
			        		</td>
							<td class="card">
								<input type="number" min="0" max="999999999" name="exCard" value="${ex.exCard }">
							</td>
							<td class="acname"><input type="text" name="exAcname" value="${ex.exAcname }"></td>
							<td class="category"><input type="text" name="exCate" value="${ex.exCate }"></td>
							<td class="memo"><input type="text" name="exMemo" value="${ex.exMemo }"></td>
						</tr>
					</c:if>
					<c:forEach var="ex" items="${expensesList }">
						<tr>
							<td class="checkbox"><input type="checkbox" name="checkbox"></td>
							<td class="date"><input type="date" name="exDate" value="${ex.exDate }"></td>
			        		<td class="cash">
			        			<input type="number" min="0" max="999999999" name="exCash" value="${ex.exCash }">
			        		</td>
							<td class="card">
								<input type="number" min="0" max="999999999" name="exCard" value="${ex.exCard }">
							</td>
							<td class="acname"><input type="text" name="exAcname" value="${ex.exAcname }"></td>
							<td class="category"><input type="text" name="exCate" value="${ex.exCate }"></td>
							<td class="memo"><input type="text" name="exMemo" value="${ex.exMemo }"></td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</form>
	</div>
 	
 	
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.canvaswrapper.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.colorhelpers.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.flot.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.flot.saturated.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.flot.browser.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.flot.drawSeries.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.flot.uiConstants.js"></script>
	<script language="javascript" type="text/javascript" src="http://www.flotcharts.org/flot/source/jquery.flot.categories.js"></script>
 	
 	
 	<script>
	//전체선택 체크박스 	
	function selectAll(selectAll)  {
		const checkboxes 
		   = document.querySelectorAll('input[type="checkbox"]');
		
		checkboxes.forEach((checkbox) => {
		  checkbox.checked = selectAll.checked
		});
	}
 	
 	//그래프
 	$(function() {
		var cate=['식비','주거/통신', '생활용품', '의복/미용', '건강/문화', '교육/육아', '교통/차량', '경조사/회비', '세금/이자', '용돈/기타', '미분류']; //i = 분류(0,1,2,3,4,5,6,7,8,9,10)
 			var data=0;
 			var a=100, c=33; //a:예산값 / b:초과분 / c:지출값
 			
 			//초과분 그래프 값 계산식
 			if(c>a) {
 				var b=c;
 				c=a;
 			}
 		
 			var db1 = []; //첫번째 그래프 값 - 예산
 			for (var i = 0; i < cate.length; i++) {
 				db1.push([cate[i], a]);
 			}
 
 			var db2 = []; //두번째 그래프 값 - 초과
 			for (var i = 0; i < cate.length; i++) {
 				db2.push([cate[i], b]); 
 			}
 			
 			var db3 = []; //세번째 그래프 값 - 지출
 			for (var i = 0; i < cate.length; i++) {
 				db3.push([cate[i], c]);
 			}
 			
 			var series = new Array();
 			
 			series.push({ //첫번째 그래프 설정값
 				data : db1,
 				bars : {
 					fill: true,
 					fillColor: "#ECEBF1",
 					show : true,
 					barWidth : 0.1,
 					order : 1,
 					lineWidth: 0,
 					fill: 1
 				}
 			});
 			series.push({
 				data : db2,
 				bars : {
 					fill: true,
 					fillColor: "#FE4330",
 					show : true,
 					order : 2,
 					lineWidth: 0,
 					fill: 1
 				}
 			});
 			series.push({
 				data : db3,
 				bars : {
 					fill: true,
 					fillColor: "#03C75A",
 					show : true,
 					barWidth : 0.1,
 					order : 3,
 					lineWidth: 0,
 					fill: 1
 				}
 			}); 
		
		$.plot("#graph-bar", series, {
			series: {
				bars: {
					show: true,
					barWidth: 0.1,
					align: "center"
				}
			},
			grid: {
				tickColor: "#ddd",
				backgroundColor: "#F9F9F9",
				borderWidth: 0
			},
			xaxis: {
				mode: "categories",
				showTicks: false,
				gridLines: false
			},
		});
	});
 	
 	
 	
	//지출 합계 계산 함수
 	function calculateexpensesTotal() {
 	  let expensesTotal = 0;
 	  let expensesCells = document.querySelectorAll("#expenses-table tbody td:nth-child(4)");
 	  for (let i = 0; i < expensesCells.length; i++) {
 	    expensesTotal += parseInt(expensesCells[i].querySelector("input").value);
 	  }
 	  document.getElementById("expenses-total").textContent = expensesTotal;
 	}

 	//지출 입력 시 합계 계산
 	let expensesTable = document.getElementById("expenses-table");
 	expensesTable.addEventListener("input", function(event) {
 	  let target = event.target;
 	  if (target.tagName.toLowerCase() === "input" && target.type === "number") {
 	    calculateexpensesTotal();
 	  }
 	});

 	expensesTable.addEventListener("keydown", function(event) {
 	  let target = event.target;
 	  if (target.tagName.toLowerCase() === "input" && target.type === "number" && event.keyCode === 13) {
 	    event.preventDefault();
 	    target.blur();
 	    let newRow = document.createElement("tr");
 	    newRow.innerHTML = `
			<td class="checkbox"><input type="checkbox"></td>
			<td class="date"><input type="date" value="${expenses.exDate }"></td>
    		<td class="cash">
    			<input type="number" min="0" max="999999999" name="exCash" value="${expenses.exCash }">
    		</td>
			<td class="card">
				<input type="number" min="0" max="999999999" name="exCard" value="${expenses.exCard }">
			</td>
			<td class="acname"><input type="text" name="exAcname" value="${expenses.exAcname }"></td>
			<td class="category"><input type="text" name="exCate" value="${expenses.exCate }"></td>
			<td class="memo"><input type="text" name="exMemo" value="${expenses.exMemo }"></td>
 	    `;
 	    let lastRow = expensesTable.rows[expensesTable.rows.length - 1];
 	    expensesTable.querySelector("tbody").insertBefore(newRow, lastRow.nextSibling);
 	    newRow.querySelector("input[type=number]").focus();

 	    //새로운 행에 이벤트 리스너 추가
 	    let newInputs = newRow.querySelectorAll("input");
 	    for (let i = 0; i < newInputs.length; i++) {
 	      newInputs[i].addEventListener("input", calculateexpensesTotal);
 	      newInputs[i].addEventListener("keydown", function(event) {
 	        if (event.keyCode === 13) {
 	          event.preventDefault();
 	          event.target.blur();
 	          let lastRow = expensesTable.rows[expensesTable.rows.length - 1];
 	          let lastInputs = lastRow.querySelectorAll("input");
 	          for (let j = 0; j < lastInputs.length; j++) {
 	            lastInputs[j].addEventListener("input", calculateexpensesTotal);
 	            lastInputs[j].addEventListener("keydown", function(event) {
 	              if (event.keyCode === 13) {
 	                event.preventDefault();
 	                event.target.blur();
 	                let newRow = document.createElement("tr");
 	                newRow.innerHTML = `
						<td class="checkbox"><input type="checkbox"></td>
						<td class="date"><input type="date" value="${expenses.exDate }"></td>
		        		<td class="cash">
		        			<input type="number" min="0" max="999999999" name="exCash" value="${expenses.exCash }">
		        		</td>
						<td class="card">
							<input type="number" min="0" max="999999999" name="exCard" value="${expenses.exCard }">
						</td>
						<td class="acname"><input type="text" name="exAcname" value="${expenses.exAcname }"></td>
						<td class="category"><input type="text" name="exCate" value="${expenses.exCate }"></td>
						<td class="memo"><input type="text" name="exMemo" value="${expenses.exMemo }"></td>
 	                `;
 	                expensesTable.querySelector("tbody").insertBefore(newRow, lastRow.nextSibling);
 	                newRow.querySelector("input[type=date]").focus();
 	                let newInputs = newRow.querySelectorAll("input");
 	                for (let k = 0; k < newInputs.length; k++) {
 	                  newInputs[k].addEventListener("input", calculateexpensesTotal);
 	                  newInputs[k].addEventListener("keydown", function(event) {
 	                    if (event.keyCode === 13) {
 	                      event.preventDefault();
 	                      event.target.blur();
 	                    }
 	                  });
 	                }
 	              }
 	            });
 	          }
 	        }
 	      });
 	    }
 	  }
 	});	
 	</script>
 </body>
 </html>